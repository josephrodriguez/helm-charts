# Define organization oof the chart
organization: swift

# Define environment name
environmentName: production

nameOverride: ""
fullnameOverride: ""

statefulset:
  replicaCount: 1

  revisionHistoryLimit: 1

  image:
    repository: alpine
    pullPolicy: IfNotPresent
    tag: "latest"

  # Define image pull secrets
  imagePullSecrets: []

  # Environment variables
  environment: []

  # Define extra environment variable from configuration maps
  extraEnvVarsCM: ""

  # Define extra environment variable from secrets
  extraEnvVarsSecret: ""

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext: {}
    # fsGroup: 2000

  # Define livenessProbe for container
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  
  # Define readinessProbe for container  
  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http    

  # Define pod annotations for the Statefulset
  podAnnotations: {}
  
  # Define pod labels for the Statefulset
  podLabels: {}

  # Define security context for the pod
  podSecurityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # runAsGroup: 1000

  # Additional volumes on the output Statefulset definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Statefulset definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true   

  # Persistent volume claim template
  persistence:
    enabled: false
    # name: pvc-name
    # storageClass: local-storage
    # size: 1Gi
    # accessModes: 
    # - ReadWriteOnce
    # selector:
    #   matchLabels:
    #     app.kubernetes.io/name: test-application
    #     app.kubernetes.io/organization: my-organization
    #     app.kubernetes.io/environment: staging

  nodeSelector: {}

  tolerations: []

  affinity: {}  

# Configuration for services
service:
  create: false
  # type: ClusterIP
  # ports:
  #   - name: swift-statefulset-service
  #     port: 8080
  #     protocol: TCP
  #     targetPort: 8080

# Enable/Disable headless service
headlessService:
  create: false
  # publishNotReadyAddresses: true
  # ports:
  #   - name: swift-statefulset-service
  #     port: 8080
  #     protocol: TCP
  #     targetPort: 8080

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

networkPolicy:
  create: false
  
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  create: false
  minAvailable: 1  
