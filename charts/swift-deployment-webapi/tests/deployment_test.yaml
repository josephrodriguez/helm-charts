suite: Test deployment template rendering

templates:
  - deployment.yaml

tests:
  - it: "should contain the correct deployment name"
    set:
      nameOverride: test-release
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: "test-release"

  - it: "should contain the correct image"
    set:
      deployment.image.repository: nginx
      deployment.image.tag: latest
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:latest

  - it: "should have replica count set to 3"
    set:
      deployment.replicaCount: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: "should have pullPolicy IfNotPresent"
    set:
      deployment.image.pullPolicy: IfNotPresent
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent

  - it: "should have the correct pod annotations"
    set:
      deployment:
        podAnnotations:
          annotation1: "value1"
          annotation2: "value2"
    asserts:
      - equal:
          path: "spec.template.metadata.annotations.annotation1"
          value: "value1"
      - equal:
          path: "spec.template.metadata.annotations.annotation2"
          value: "value2"       

  - it: "should contain correct secret volume"
    set:
      deployment:
        volumes:
          - name: foo
            secret:
              secretName: mysecret
              optional: false
    asserts:
      - equal:
          path: "spec.template.spec.volumes[0].name"
          value: "foo"
      - equal:
          path: "spec.template.spec.volumes[0].secret.secretName"
          value: "mysecret"
      - equal:
          path: "spec.template.spec.volumes[0].secret.optional"
          value: false        

  - it: "should mount secret volume at correct path"
    set:
      deployment:
        volumeMounts:
          - name: foo
            mountPath: "/etc/foo"
            readOnly: true 
    asserts:
      - equal:
          path: "spec.template.spec.containers[0].volumeMounts[0].name"
          value: "foo"
      - equal:
          path: "spec.template.spec.containers[0].volumeMounts[0].mountPath"
          value: "/etc/foo"
      - equal:
          path: "spec.template.spec.containers[0].volumeMounts[0].readOnly"
          value: true